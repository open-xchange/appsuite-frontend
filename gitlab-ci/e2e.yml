---

run e2e tests:
  stage: e2e
  image: registry.gitlab.open-xchange.com/frontend/dev_env/puppeteer:latest
  tags:
    - e2e
    - kubernetes
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      alias: e2e-test.os.oxui.de
  variables:
    # e2e configuration
    LAUNCH_URL: http://e2e-test.os.oxui.de:8337/appsuite/
    PROVISIONING_URL: http://e2e-test.os.oxui.de:8337/
    PROVISIONING_KEYCLOAK_URL: https://idp.k3s.os.oxui.de
    PROVISIONING_KEYCLOAK_REALM: Appsuite
    PROVISIONING_KEYCLOAK_USER: $KEYCLOAK_ADMIN_USER
    PROVISIONING_KEYCLOAK_PASS: $KEYCLOAK_ADMIN_PASSWORD
    CONTEXT_ID: $CI_JOB_ID
    CHROME_ARGS: '--no-sandbox --kiosk-printing --disable-web-security'
    FILTER_SUITE: ./e2e/suites/job$CI_NODE_INDEX.json
    FILTER_REPORT: filter_report_$CI_NODE_INDEX.json
    # services configuration
    SERVER: https://as-7103.k3s.os.oxui.de/appsuite/
    # gitlab config
    GIT_DEPTH: "10"
  script:
    # make PARTITIONS an array
    - PARTITIONS=(${PARTITIONS})
    - cd ui
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - mkdir -p ./build/e2e
    - wget http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/filter_report.json -q -O ./build/e2e/suite.json || rm -f ./build/e2e/suite.json
    - "[ -f ./build/e2e/suite.json ] || runOnly=true npx codeceptjs run -o '{ \"plugins\": { \"filterSuite\": { \"suite\": [], \"report\": \"suite.json\" } } }'"
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/partition.js')" ./build/e2e/suite.json $CI_NODE_TOTAL ./e2e/suites
    - yarn e2e
  parallel: 20
  # reasonable timeout, enforce better partitioning
  timeout: 30 minutes
  artifacts:
    when: always
    paths:
      - ui/build/e2e/
    expire_in: 1 day
  only:
    changes:
      - ui/**/*
  except:
    refs:
      - /^poc\//
      - /^e2e\//

# deploy e2e environment to well-known location - can be used to develop e2e tests against
deploy e2e dev server:
  stage: deploy
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_NAME: e2e-develop
    SERVER: https://as-7103.k3s.os.oxui.de/appsuite/
  script:
    - docker stop $CONTAINER_NAME || true
    - docker wait $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker pull $DOCKER_IMAGE
    - docker container create --name $CONTAINER_NAME -e SERVER=$SERVER -v /app/build/e2e $DOCKER_IMAGE e2e
    - docker container cp ui/e2e/fixtures $CONTAINER_NAME:/app/build/e2e
    - docker container start $CONTAINER_NAME
  only:
    - develop

merge filter report:
  stage: report
  image: registry.gitlab.open-xchange.com/frontend/dev_env/puppeteer:latest
  dependencies:
    - run e2e tests
  needs:
    - run e2e tests
  services:
    - name: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      alias: e2e-test.os.oxui.de
  variables:
    # e2e configuration
    LAUNCH_URL: http://e2e-test.os.oxui.de:8337/appsuite/
    PROVISIONING_URL: http://e2e-test.os.oxui.de:8337/
    PROVISIONING_KEYCLOAK_URL: https://idp.k3s.os.oxui.de
    PROVISIONING_KEYCLOAK_REALM: Appsuite
    PROVISIONING_KEYCLOAK_USER: $KEYCLOAK_ADMIN_USER
    PROVISIONING_KEYCLOAK_PASS: $KEYCLOAK_ADMIN_PASSWORD
    CONTEXT_ID: $CI_JOB_ID
    CHROME_ARGS: '--no-sandbox --kiosk-printing --disable-web-security'
    FILTER_SUITE: ./merged_reports.json
    FILTER_REPORT: filter_report_missing.json
    # services configuration
    SERVER: https://as-7103.k3s.os.oxui.de/appsuite/
    # gitlab config
    GIT_DEPTH: "10"
  script:
    - cd ui
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/merge')" ./build/e2e/filter_report_*.json > $FILTER_SUITE
    # ignore any failing tests
    - yarn e2e -i || true
    - node -e "require('@open-xchange/codecept-helper/src/plugins/filterSuite/merge')" ./build/e2e/$FILTER_REPORT $FILTER_SUITE > ./build/e2e/filter_report.json
  tags:
    - e2e
  allow_failure: true
  when: always
  artifacts:
    when: always
    paths:
      - ui/build/e2e/filter_report.json
      - ui/merged_reports.json
    expire_in: 1 day
  only:
    changes:
      - ui/**/*
  except:
    refs:
      - /^poc\//
      - /^e2e\//

generate e2e report:
  stage: report
  image: registry.gitlab.open-xchange.com/frontend/dev_env/allure:latest
  variables:
    GIT_STRATEGY: none
  dependencies:
    - run e2e tests
    - run new e2e test
  script:
    # fail if there are no test results, prevents history from getting lost in some cases
    - find ui/build/e2e/ -name *.xml > /dev/null
    # fetch current version of history
    - wget http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/history.tar -q -O - | tar x &>/dev/null && mv ui/build/allure-report/history ui/build/e2e/ || echo "No history found"
    - allure generate ui/build/e2e/ -o ui/build/allure-report/$CI_PIPELINE_ID
    # preserve well-known location to bookmark/link to at latest
    - cp -r ui/build/allure-report/$CI_PIPELINE_ID/history ui/build/allure-report/
    - tar cf ui/build/allure-report/history.tar ui/build/allure-report/history &>/dev/null || echo "No history found"
    - rm -rf ui/build/allure-report/history/
  when: always
  artifacts:
    when: always
    paths:
      - ui/build/allure-report
    expire_in: 1 day
  only:
    refs:
      - develop
      - master
      - /^master-/
      - /^release-/
      - /^feature\//
      - /^bug\//
      - /^e2e\//
    changes:
      - ui/**/*

publish e2e report:
  stage: cleanup
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  dependencies:
    - generate e2e report
  needs:
    - generate e2e report
  script:
    # fail if there is no history being generated. Prevents empty reports from being "published".
    - find ui/build/allure-report/ -name history.json > /dev/null
    - docker cp ui/build/allure-report/. reports:/usr/share/nginx/html/$CI_COMMIT_REF_SLUG
    - docker exec reports rm -f /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
    - docker exec reports ln -sf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID /usr/share/nginx/html/$CI_COMMIT_REF_SLUG/latest
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    url: http://reports.ui.cloud.open-xchange.com/$CI_COMMIT_REF_SLUG/$CI_PIPELINE_ID/
    on_stop: remove e2e report
  when: always
  only:
    refs:
      - develop
      - master
      - /^master-/
      - /^release-/
      - /^feature\//
      - /^bug\//
      - /^e2e\//
    changes:
      - ui/**/*

remove e2e report:
  stage: cleanup
  dependencies: []
  variables:
    DOCKER_HOST: docker.ui.cloud.open-xchange.com
    GIT_STRATEGY: none
  script:
    - docker exec reports rm -rf /usr/share/nginx/html/$CI_COMMIT_REF_SLUG
  environment:
    name: reports/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  except:
    refs:
      - develop
      - master
      - /^master-/
      - /^poc\//

run new e2e test:
  extends: run e2e tests
  services:
    - name: $CI_REGISTRY_IMAGE:develop
      alias: e2e-test.os.oxui.de
  script:
  - cd ui
  - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
  - echo ${CI_COMMIT_REF_NAME//e2e\//}
  - npx codeceptjs run-rerun --grep "${CI_COMMIT_REF_NAME//e2e\//}"
  parallel: 5
  only:
    refs:
      - /^e2e\//
  except:
    refs:
      - /^poc\//
