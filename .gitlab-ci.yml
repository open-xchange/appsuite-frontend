image: docker:latest

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: never
    - when: always

include:
  - local: "/gitlab-ci/docker.yml"
  - local: "/gitlab-ci/preview_apps.yml"
  - local: "/gitlab-ci/documentation.yml"
  - local: "/gitlab-ci/packaging.yml"
  - local: "/gitlab-ci/e2e.yml"

stages:
  - build
  - test
  - deploy
  - e2e
  - merge
  - report
  - cleanup

variables:
    # only fetch last 10 commits, much faster clones
  GIT_DEPTH: "10"

.default_cache:
  cache:
    # use one cache
    key: "yarn"
    paths:
      - ".yarn-cache"

.build ui plugin:
  extends: .default_cache
  image: registry.gitlab.open-xchange.com/frontend/dev_env:latest
  variables:
    build_tasks: dist:build
    build_script: grunt ${build_tasks}
    KUBERNETES_MEMORY_REQUEST: 1G
  script:
    - cd ${PROJECT_PATH}
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache
    - echo ${build_script}
    - eval "${build_script}"
    - "[ -z \"$PACKAGE_NAME\" ] && export PACKAGE_NAME=${PROJECT_PATH}"
    - "[ -z \"$HTDOCS_PACKAGE_NAME\" ] && export HTDOCS_PACKAGE_NAME=${PACKAGE_NAME}"
    - "[ -z \"$L10N_PACKAGE_NAME\" ] && export L10N_PACKAGE_NAME=${PACKAGE_NAME}"
    - npx grunt install:dist --prefix=../${PACKAGE_NAME}/build/pkg --htdoc=../${HTDOCS_PACKAGE_NAME}/build/pkg
    - npx grunt install:languages --prefix=../${L10N_PACKAGE_NAME}/build/pkg
  stage: build
  tags:
    - kubernetes
  artifacts:
    expire_in: 2hours
    paths:
      - "*/build"
      - "*/dist"
      - "*/node_modules"

# split build_ui into 2 build jobs (running on 2 different runners in parallel)
# this distributes workload onto 2 runners instead of one and basically halves build time
build ui:
  extends: .build ui plugin
  parallel: 2
  variables:
    PROJECT_PATH: ui
    PACKAGE_NAME: open-xchange-appsuite-manifest
    HTDOCS_PACKAGE_NAME: open-xchange-appsuite
    L10N_PACKAGE_NAME: open-xchange-appsuite-l10n
    build_script: eval "grunt \$${build_tasks_$$CI_NODE_INDEX}"
    build_tasks_1: lint copy_build compile_po concat uglify:dist_largeFiles less copy_dist
    build_tasks_2: copy_build compile_po concat uglify:dist uglify:dist_i18n version_txt create_i18n_properties copy_dist
    KUBERNETES_MEMORY_REQUEST: 2.2G
  before_script:
    - "[ -z \"$VERSION\" ] && export VERSION=$(git describe --match '[0-9]*.[0-9]*.[0-9]*')"
    - echo "Building version $VERSION"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - ui/**/*
        - update-themes/**/*
        - open-xchange-appsuite/**/*
        - open-xchange-appsuite-l10n/**/*
        - open-xchange-appsuite-manifest/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always

build update-themes:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: update-themes
    PACKAGE_NAME: open-xchange-appsuite-manifest
  before_script:
    - cd ${PROJECT_PATH}
    # add production dependencies to different modules folder, so those can be picked up by grunt copy tasks
    - yarn --non-interactive --no-progress -s --cache-folder ../.yarn-cache --production --modules-folder=deps
    - cd ..
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - ui/**/*
        - update-themes/**/*
        - open-xchange-appsuite/**/*
        - open-xchange-appsuite-l10n/**/*
        - open-xchange-appsuite-manifest/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always

test ui:
  image: registry.gitlab.open-xchange.com/frontend/dev_env/browser:latest
  variables:
    BROWSERS: DockerHeadless
  script:
    - cd ui
    - yarn test
  stage: test
  dependencies:
    - build ui
  needs:
    - build ui
  tags:
    - kubernetes
  artifacts:
    reports:
      junit: ui/build/reports/unit/*/result.xml
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - ui/**/*
      when: always


run e2e tests:
  extends: .default_cache
  # don't change the cache, just pull should be up-to-date due to previous build jobs
  cache:
    policy: pull

build help:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: help
    PACKAGE_NAME: open-xchange-appsuite-help
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - help/**/*
        - open-xchange-appsuite-help/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always

build guidedtours:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: guidedtours
    PACKAGE_NAME: open-xchange-guidedtours
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - guidedtours/**/*
        - open-xchange-guidedtours/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always

build spamexperts:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: open-xchange-appsuite-spamexperts
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - open-xchange-appsuite-spamexperts/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always

build dynamic-theme:
  extends: .build ui plugin
  variables:
    PROJECT_PATH: open-xchange-dynamic-theme
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^master/'
      when: always
    - if: '$CI_COMMIT_REF_NAME !~ /^e2e\//'
      changes:
        - open-xchange-dynamic-theme/**/*
        - gitlab-ci/*
        - .gitlab-ci.yml
      when: always
